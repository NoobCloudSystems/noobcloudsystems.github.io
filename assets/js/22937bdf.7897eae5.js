"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[824],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>g});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var u=o.createContext({}),s=function(e){var r=o.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},l=function(e){var r=s(e.components);return o.createElement(u.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},d=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=s(t),g=n,b=d["".concat(u,".").concat(g)]||d[g]||c[g]||a;return t?o.createElement(b,p(p({ref:r},l),{},{components:t})):o.createElement(b,p({ref:r},l))}));function g(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,p=new Array(a);p[0]=d;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i.mdxType="string"==typeof e?e:n,p[1]=i;for(var s=2;s<a;s++)p[s]=t[s];return o.createElement.apply(null,p)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8807:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>p,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var o=t(7462),n=(t(7294),t(3905));const a={sidebar_position:2},p="Groups",i={unversionedId:"noobcloud-api/groups",id:"noobcloud-api/groups",title:"Groups",description:"Group Data",source:"@site/docs/noobcloud-api/groups.md",sourceDirName:"noobcloud-api",slug:"/noobcloud-api/groups",permalink:"/docs/noobcloud-api/groups",draft:!1,editUrl:"https://github.com/NoobCloudSystems/wiki/blob/master/docs/noobcloud-api/groups.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Getting started",permalink:"/docs/noobcloud-api/getting-started"},next:{title:"Servers",permalink:"/docs/noobcloud-api/servers"}},u={},s=[{value:"Group Data",id:"group-data",level:2},{value:"Using GroupTypes",id:"using-grouptypes",level:3},{value:"Obtaining Groups",id:"obtaining-groups",level:3}],l={toc:s};function c(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,o.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"groups"},"Groups"),(0,n.kt)("h2",{id:"group-data"},"Group Data"),(0,n.kt)("p",null,"Every ",(0,n.kt)("inlineCode",{parentName:"p"},"Server")," started by NoobCloud is subject to a certain ",(0,n.kt)("inlineCode",{parentName:"p"},"Group"),". Using NoobCloudAPI you can easily obtain information them."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"List<Group> groups = NoobCloudAPI.getInstance().getAllGroups();\nList<Group> gameGroups = NoobCloudAPI.getInstance().getAllGameGroups();\nList<Group> proxyGroups = NoobCloudAPI.getInstance().getAllProxyGroups();\n")),(0,n.kt)("p",null,"To get the number of players who are online in a ",(0,n.kt)("inlineCode",{parentName:"p"},"Group"),", you can use ",(0,n.kt)("inlineCode",{parentName:"p"},"NoobCloudAPI.getInstance().getGroupOnlineCount(String groupName, GroupType groupType)")),(0,n.kt)("h3",{id:"using-grouptypes"},"Using GroupTypes"),(0,n.kt)("p",null,"A ",(0,n.kt)("inlineCode",{parentName:"p"},"Group")," can be characterised more precisely by checking its ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupType")," with ",(0,n.kt)("inlineCode",{parentName:"p"},"Group#getGroupType()"),". You can also check if the group is a lobby group by using ",(0,n.kt)("inlineCode",{parentName:"p"},"Group#isLobby()"),". When joining the server, players are automatically connected to such servers."),(0,n.kt)("h3",{id:"obtaining-groups"},"Obtaining Groups"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"String groupName = Server#getGroupName();\nGroupType groupType = Server#getGroupType();\nOptional<Group> group = NoobCloudAPI.getInstance().getGroup(groupName);\n// The group is existing if the Optional returned is present.\n")))}c.isMDXComponent=!0}}]);